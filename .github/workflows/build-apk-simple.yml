name: Build APK (Simple)

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm install
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./android/gradlew
      
    - name: Build APK
      run: |
        cd android
        ./gradlew assembleRelease
      env:
        NODE_ENV: production
        
    - name: List generated files
      run: |
        echo "=== Listing all APK files ==="
        find android/app/build -name "*.apk" -type f
        echo "=== Listing build outputs directory ==="
        ls -la android/app/build/outputs/ || echo "outputs directory not found"
        echo "=== Listing APK directory ==="
        ls -la android/app/build/outputs/apk/ || echo "apk directory not found"
        echo "=== Listing release directory ==="
        ls -la android/app/build/outputs/apk/release/ || echo "release directory not found"
        
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-pills-apk-${{ github.run_number }}
        path: android/app/build/outputs/apk/release/*.apk
        retention-days: 30
        
    - name: Comment PR with download link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ APK built successfully! Download it from the [Actions tab](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) under "Artifacts".'
          })